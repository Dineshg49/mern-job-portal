{"ast":null,"code":"var _jsxFileName = \"/home/dinesh/sem4/ssad/assignments/ssada1/frontend/src/components/Users/my-jobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Navbarr from '../templates/Navbar-r';\nimport { Button } from '@material-ui/core';\nimport { Icon } from 'semantic-ui-react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nclass Myjobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      var nam = e.target.name;\n      var val = e.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.handleChange = e => {\n      //   console.log(\"called\")\n      let value = Array.from(e.target.selectedOptions, option => option.value); // console.log(this.state.value[0])\n\n      this.setState({\n        types: value\n      });\n    };\n\n    this.state = {\n      details: [],\n      jobs: [],\n      stat: '',\n      search: '',\n      types: ['Full-time', 'Part-Time', 'Work From Home'],\n      options: ['Full-time', 'Part-Time', 'Work From Home']\n    };\n    this.checstatus = this.checstatus.bind(this);\n    this.onSort = this.onSort.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/user/profile') // unimplemented\n    .then(response => {\n      this.setState({\n        details: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/user/active-jobs') // unimplemented\n    .then(response => {\n      this.setState({\n        jobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  onSort(event, sortKey, val) {\n    const jobs = this.state.jobs;\n    jobs.sort((a, b) => {\n      var nameA, nameB;\n\n      if (sortKey === 'rating') {\n        nameA = a.rating;\n        nameB = b.raing;\n      } else if (sortKey === 'salary') {\n        nameA = a.salary;\n        nameB = b.salary;\n      } else {\n        nameA = a.duration;\n        nameB = b.duration;\n      }\n\n      if (nameA < nameB) {\n        if (val) return -1;else return 1;\n      }\n\n      if (nameA > nameB) {\n        if (val) return 1;else return -1;\n      }\n\n      return 0;\n    });\n    this.setState({\n      jobs: jobs\n    }); // console.log(jobs)\n  }\n\n  checstatus(_id) {\n    var x = this.state.details[0].jobs_applied;\n    var i;\n    var f = 0;\n\n    for (i = 0; i < x.length; i++) {\n      if (x[i] == _id) f = 1;\n    }\n\n    return f;\n  }\n\n  onSelect(selectedList, selectedItem) {\n    var newArr = selectedList;\n    this.setState({\n      types: newArr\n    });\n  }\n\n  onRemove(selectedList, removedItem) {\n    var newArr = selectedList;\n    this.setState({\n      types: newArr\n    });\n  }\n\n  render() {\n    var jobs = this.state.jobs; // console.log(\"here\");\n    // console.log(jobs)\n\n    const searchedtitle = jobs.filter(job => {\n      return job.title.toLowerCase().includes(this.state.search.toLowerCase());\n    });\n    const searchedtitle2 = searchedtitle.filter(job => {\n      return this.state.types.includes(job.type);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      href: \"/dashboard-a\",\n      class: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by Job-Title\",\n      className: \"form-control\",\n      name: \"search\",\n      value: this.state.search,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Job-Type\"), React.createElement(Multiselect, {\n      onSelect: this.onSelect,\n      onRemove: this.onRemove,\n      options: this.state.options,\n      isObject: false,\n      onChange: this.handleChange,\n      selectedValues: this.state.types,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Job-Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Recuiter Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Job-Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Rating \", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'rating', 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), \" \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'rating', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Salary \", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'salary', 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), \"  \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'salary', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Duration \", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'duration', 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), \"  \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'duration', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Deadline\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Apply\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, searchedtitle2.map((job, i) => {\n      var f = this.checstatus(job._id); // var stat\n\n      if (f == 1) this.state.stat = \"Applied\";else {\n        //     console.log(job.max_applications)\n        //   console.log(job.curr_applicants.length)\n        if (job.max_applications == job.curr_applicants.length) this.state.stat = \"Full\";else this.state.stat = \"Apply\";\n      }\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, job.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, job.name_of_recuiter), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, job.type), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, job.rating), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, job.salary), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, job.duration), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, job.deadline), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => {\n          if (this.state.details[0].jobs_applied.length == 10) {\n            alert(\"You cannot have more than 10 open job applications\");\n          } else {\n            var sop = prompt('Please enter your name');\n            axios.get('http://localhost:4000/user/apply-job', {\n              params: {\n                _id: job._id,\n                title: job.title,\n                sop: sop\n              }\n            }).then(response => console.log(response)).catch(function (err) {\n              console.log(err);\n            });\n            axios.get('http://localhost:4000/user/add-applicant', {\n              params: {\n                _id: job._id,\n                email: this.state.details[0].email,\n                title: job.title\n              }\n            }).then(response => console.log(response)).catch(function (err) {\n              console.log(err);\n            });\n          } // console.log(id)\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.stat)));\n    }))));\n  }\n\n}\n\nexport default Myjobs;","map":{"version":3,"sources":["/home/dinesh/sem4/ssad/assignments/ssada1/frontend/src/components/Users/my-jobs.js"],"names":["React","Component","axios","Navbarr","Button","Icon","Row","Col","Multiselect","Myjobs","constructor","props","onChange","e","nam","target","name","val","value","setState","handleChange","Array","from","selectedOptions","option","types","state","details","jobs","stat","search","options","checstatus","bind","onSort","onSelect","onRemove","componentDidMount","get","then","response","data","catch","error","console","log","event","sortKey","sort","a","b","nameA","nameB","rating","raing","salary","duration","_id","x","jobs_applied","i","f","length","selectedList","selectedItem","newArr","removedItem","render","searchedtitle","filter","job","title","toLowerCase","includes","searchedtitle2","type","map","max_applications","curr_applicants","name_of_recuiter","deadline","alert","sop","prompt","params","err","email"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Navbarr from '../templates/Navbar-r'\nimport { Button } from '@material-ui/core';\nimport { Icon } from 'semantic-ui-react'\nimport {Row , Col} from 'react-bootstrap'\nimport { Multiselect } from 'multiselect-react-dropdown';\n\n\nclass Myjobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {details: [] , jobs : [] ,stat : '' , search : '' , types : ['Full-time' ,'Part-Time' ,'Work From Home'],\n         options : ['Full-time' ,'Part-Time' ,'Work From Home']}\n        this.checstatus = this.checstatus.bind(this);\n        this.onSort = this.onSort.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.onRemove = this.onRemove.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user/profile') // unimplemented\n             .then(response => {\n                 this.setState({details: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n\n        axios.get('http://localhost:4000/user/active-jobs') // unimplemented\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        \n    }\n    onSort(event , sortKey ,val){\n        const jobs = this.state.jobs;\n        jobs.sort((a,b) => {\n            var nameA , nameB;\n            if(sortKey === 'rating')\n            {\n                nameA = a.rating;\n                nameB = b.raing;\n            }\n            else if(sortKey === 'salary')\n            {\n                nameA = a.salary;\n                nameB = b.salary;\n            }\n            else\n            {\n                nameA = a.duration;\n                nameB = b.duration;\n            }\n            if (nameA < nameB) {\n                if(val)return -1;\n                else  return 1;\n            }\n            if (nameA > nameB) {\n                if(val) return 1;\n                else return -1;\n            }\n            return 0;\n        })\n        this.setState({jobs : jobs})\n        // console.log(jobs)\n    }\n    checstatus(_id)\n    {\n        var x = this.state.details[0].jobs_applied\n        var i\n        var f=0\n        for(i = 0 ;i<x.length ;i++){\n            if(x[i]==_id)\n                f=1;\n        }\n        return f;\n    }\n    onChange = e => {\n        var nam = e.target.name;\n        var val = e.target.value;\n        this.setState({ [nam] : val });\n    }\n    onSelect(selectedList, selectedItem) {\n        var newArr = selectedList;\n        this.setState({types : newArr})\n    }\n    onRemove(selectedList, removedItem) {\n        var newArr = selectedList;\n        this.setState({types : newArr})\n    }\n    handleChange = (e) => {\n     //   console.log(\"called\")\n        let value = Array.from(e.target.selectedOptions, option => option.value);\n       // console.log(this.state.value[0])\n        this.setState({types: value});\n        \n      }\n\n    render() {\n        var jobs = this.state.jobs;\n        // console.log(\"here\");\n        // console.log(jobs)\n        const searchedtitle = jobs.filter(job => {\n            return job.title.toLowerCase().includes(this.state.search.toLowerCase())\n        })\n        const searchedtitle2 = searchedtitle.filter(job => {\n            return this.state.types.includes(job.type)\n        })\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" href=\"/dashboard-a\" class=\"back\">Back</Button>\n                <input type=\"text\" placeholder=\"Search by Job-Title\" className=\"form-control\" name = \"search\" value={this.state.search} onChange={this.onChange} />\n                <br></br>\n                <label>Job-Type</label>\n                <Multiselect onSelect={this.onSelect} onRemove={this.onRemove} options={this.state.options} isObject={false} onChange = {this.handleChange} selectedValues={this.state.types}/>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Job-Title</th>\n                            <th>Recuiter Name</th>\n                            <th>Job-Type</th>\n                            <th>Rating <Icon name='angle up' size='large' onClick = {e => this.onSort(e,'rating',0)} /> <Icon name='angle down' size='large' onClick = {e => this.onSort(e,'rating',1)} /></th>\n                            <th>Salary <Icon name='angle up' size='large' onClick = {e => this.onSort(e,'salary',0)} />  <Icon name='angle down' size='large' onClick = {e => this.onSort(e,'salary',1)}/></th>\n                            <th>Duration <Icon name='angle up' size='large' onClick = {e => this.onSort(e,'duration',0)}/>  <Icon name='angle down' size='large'onClick = {e => this.onSort(e,'duration',1)} /></th>\n                            <th>Deadline</th>\n                            <th>Apply</th>\n\n                            {/* <th>Dispatch</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        searchedtitle2.map((job, i) => {\n                            var f = this.checstatus(job._id)\n                           // var stat\n                            if(f==1)\n                                this.state.stat = \"Applied\"\n                            else\n                            {\n                           //     console.log(job.max_applications)\n                             //   console.log(job.curr_applicants.length)\n                                if(job.max_applications == job.curr_applicants.length)\n                                    this.state.stat = \"Full\"\n                                else\n                                    this.state.stat = \"Apply\"\n                            }\n                            return (\n                                <tr>\n                                    <td>{job.title}</td>\n                                    <td>{job.name_of_recuiter}</td>\n                                    <td>{job.type}</td>\n                                    <td>{job.rating}</td>\n                                    <td>{job.salary}</td>\n                                    <td>{job.duration}</td>\n                                    <td>{job.deadline}</td>\n                                    <th><button className=\"btn btn-primary\" onClick = {() =>{\n                                        if(this.state.details[0].jobs_applied.length == 10)\n                                        {\n                                            alert(\"You cannot have more than 10 open job applications\")\n                                        }\n                                        else{\n                                        var sop = prompt('Please enter your name')\n                                        axios.get('http://localhost:4000/user/apply-job' , {\n                                            params : {\n                                                _id : job._id,\n                                                title : job.title,\n                                                sop : sop\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                        axios.get('http://localhost:4000/user/add-applicant' , {\n                                            params : {\n                                                _id : job._id,\n                                                email : this.state.details[0].email,\n                                                title : job.title\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                    }\n                                        // console.log(id)\n                                    }}>{this.state.stat}</button></th>\n\n                                    {/* <td><input type=\"button\" value=\"Dispatch\" className=\"btn btn-primary\"/></td> */}\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Myjobs;"]},"metadata":{},"sourceType":"module"}