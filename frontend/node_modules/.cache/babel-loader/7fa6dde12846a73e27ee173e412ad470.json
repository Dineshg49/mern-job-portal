{"ast":null,"code":"var _jsxFileName = \"/home/dinesh/sem4/ssad/assignments/ssada1/frontend/src/components/Users/my-jobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Navbarr from '../templates/Navbar-r';\nimport { Button } from '@material-ui/core';\n\nclass Myjobs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: [],\n      jobs: [],\n      stat: ''\n    };\n    this.checstatus = this.checstatus.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/user/profile') // unimplemented\n    .then(response => {\n      this.setState({\n        details: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/user/active-jobs') // unimplemented\n    .then(response => {\n      this.setState({\n        jobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  checstatus(_id) {\n    var x = this.state.details[0].jobs_applied;\n    var i;\n    var f = 0;\n\n    for (i = 0; i < x.length; i++) {\n      if (x[i] == _id) f = 1;\n    }\n\n    return f;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      href: \"/dashboard-a\",\n      class: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Job-Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Recuiter Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Recuiter Rating\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Salary\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Duration\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Deadline\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Apply\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.jobs.map((job, i) => {\n      var f = this.checstatus(job._id); // var stat\n\n      if (f == 1) this.state.stat = \"Applied\";else {\n        console.log(job.max_applications);\n        console.log(job.curr_applicants.length);\n        if (job.max_applications == job.curr_applicants.length) this.state.stat = \"Full\";else this.state.stat = \"Apply\";\n      }\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, job.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, job.name_of_recuiter), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, job.rating), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, job.salary), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, job.duration), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, job.deadline), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => {\n          var sop = prompt('Please enter your name');\n          axios.get('http://localhost:4000/user/apply-job', {\n            params: {\n              _id: job._id,\n              title: job.title,\n              sop: sop\n            }\n          }).then(response => console.log(response)).catch(function (err) {\n            console.log(err);\n          });\n          axios.get('http://localhost:4000/user/add-applicant', {\n            params: {\n              _id: this.state.details[0]._id,\n              email: this.state.details[0].email,\n              title: job.title\n            }\n          }).then(response => console.log(response)).catch(function (err) {\n            console.log(err);\n          }); // console.log(id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.stat)));\n    }))));\n  }\n\n}\n\nexport default Myjobs;","map":{"version":3,"sources":["/home/dinesh/sem4/ssad/assignments/ssada1/frontend/src/components/Users/my-jobs.js"],"names":["React","Component","axios","Navbarr","Button","Myjobs","constructor","props","state","details","jobs","stat","checstatus","bind","componentDidMount","get","then","response","setState","data","catch","error","console","log","_id","x","jobs_applied","i","f","length","render","map","job","max_applications","curr_applicants","title","name_of_recuiter","rating","salary","duration","deadline","sop","prompt","params","err","email"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Navbarr from '../templates/Navbar-r'\nimport { Button } from '@material-ui/core';\n\nclass Myjobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {details: [] , jobs : [] ,stat : ''}\n        this.checstatus = this.checstatus.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user/profile') // unimplemented\n             .then(response => {\n                 this.setState({details: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n\n        axios.get('http://localhost:4000/user/active-jobs') // unimplemented\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        \n    }\n    checstatus(_id)\n    {\n        var x = this.state.details[0].jobs_applied\n        var i\n        var f=0\n        for(i = 0 ;i<x.length ;i++){\n            if(x[i]==_id)\n                f=1;\n        }\n        return f;\n    }\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" href=\"/dashboard-a\" class=\"back\">Back</Button>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Job-Title</th>\n                            <th>Recuiter Name</th>\n                            <th>Recuiter Rating</th>\n                            <th>Salary</th>\n                            <th>Duration</th>\n                            <th>Deadline</th>\n                            <th>Apply</th>\n\n                            {/* <th>Dispatch</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.jobs.map((job, i) => {\n                            var f = this.checstatus(job._id)\n                           // var stat\n                            if(f==1)\n                                this.state.stat = \"Applied\"\n                            else\n                            {\n                                console.log(job.max_applications)\n                                console.log(job.curr_applicants.length)\n                                if(job.max_applications == job.curr_applicants.length)\n                                    this.state.stat = \"Full\"\n                                else\n                                    this.state.stat = \"Apply\"\n                            }\n                            return (\n                                <tr>\n                                    <td>{job.title}</td>\n                                    <td>{job.name_of_recuiter}</td>\n                                    <td>{job.rating}</td>\n                                    <td>{job.salary}</td>\n                                    <td>{job.duration}</td>\n                                    <td>{job.deadline}</td>\n                                    <th><button className=\"btn btn-primary\" onClick = {() =>{\n                                        var sop = prompt('Please enter your name')\n                                        axios.get('http://localhost:4000/user/apply-job' , {\n                                            params : {\n                                                _id : job._id,\n                                                title : job.title,\n                                                sop : sop\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                        axios.get('http://localhost:4000/user/add-applicant' , {\n                                            params : {\n                                                _id : this.state.details[0]._id,\n                                                email : this.state.details[0].email,\n                                                title : job.title\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n\n                                        // console.log(id)\n                                    }}>{this.state.stat}</button></th>\n\n                                    {/* <td><input type=\"button\" value=\"Dispatch\" className=\"btn btn-primary\"/></td> */}\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Myjobs;"]},"metadata":{},"sourceType":"module"}