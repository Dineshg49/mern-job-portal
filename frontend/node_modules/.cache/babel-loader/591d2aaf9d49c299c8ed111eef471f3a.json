{"ast":null,"code":"var _jsxFileName = \"/home/dinesh/sem4/ssad/assignments/ssada1/frontend/src/components/Users/job-details.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Navbarr from '../templates/Navbar-r';\nimport { Button, unstable_createMuiStrictModeTheme } from '@material-ui/core';\nimport { Icon } from 'semantic-ui-react';\n\nclass jobdetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: [],\n      curr_job: [],\n      stat: ''\n    };\n    this.checstatus = this.checstatus.bind(this);\n    this.onSort = this.onSort.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/user/profile/jobs') // unimplemented\n    .then(response => {\n      this.setState({\n        details: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/user/curr-job-details') // unimplemented\n    .then(response => {\n      this.setState({\n        curr_job: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  onSort(event, sortKey, val) {\n    const details = this.state.details;\n    var x;\n    this.state.curr_job.map((job, i) => {\n      x = job._id;\n    });\n    details.sort((a, b) => {\n      var nameA, nameB;\n\n      if (sortKey === 'rating') {\n        if (a.rating_cn != 0) {\n          nameA = a.rating / a.rating_cn;\n        } else nameA = 0;\n\n        if (b.rating_cn != 0) {\n          nameB = b.rating / b.rating_cn;\n        } else nameB = 0;\n      } else if (sortKey === 'name') {\n        nameA = a.name;\n        nameB = b.name;\n      } else {\n        for (var i = 0; i < a.application.length; i++) {\n          if (a.application[i].id_of_job === x) {\n            nameA = a.application[i].date_of_application;\n          }\n        }\n\n        for (var i = 0; i < b.application.length; i++) {\n          if (b.application[i].id_of_job === x) {\n            nameB = b.application[i].date_of_application;\n          }\n        }\n      }\n\n      if (nameA < nameB) {\n        if (val) return -1;else return 1;\n      }\n\n      if (nameA > nameB) {\n        if (val) return 1;else return -1;\n      }\n\n      return 0;\n    });\n    this.setState({\n      details: details\n    }); // console.log(jobs)\n  }\n\n  checstatus(title) {\n    var x = this.state.details[0].jobs_applied;\n    var i;\n    var f = 0;\n\n    for (i = 0; i < x.length; i++) {\n      if (x[i] == title) f = 1;\n    }\n\n    return f;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      href: \"/created-jobs\",\n      class: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Applicant Name\", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'name', 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \" \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'name', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Applicant Skills\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Date of Application\", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'date_of_application', 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), \" \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'date_of_application', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Education\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"SOP\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Rating\", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'rating', 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \" \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'rating', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Stage\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Shortlist/Accept\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Reject\")))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.details.map((user, i) => {\n      var rat;\n\n      if (user.rating_cn != 0) {\n        rat = user.rating / user.rating_cn;\n      } else {\n        rat = \"Not Rated Yet\";\n      }\n\n      var sop;\n      var x;\n      var doj;\n      this.state.curr_job.map((job, i) => {\n        x = job._id;\n      });\n\n      for (var i = 0; i < user.application.length; i++) {\n        if (user.application[i].id_of_job === x) {\n          sop = user.application[i].sop;\n          doj = user.application[i].date_of_application;\n        }\n      }\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, user.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, user.skills.map((val, i) => {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, val, \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"\\xA0\\xA0\"), \" \");\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, doj), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, user.education.map((val, i) => {\n        if (val.inst !== '') {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, val.inst, \"(\", val.joind, \" - \", val.endd, \") \", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, \"\\xA0\\xA0\"));\n        } else {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          });\n        }\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, sop), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, rat), this.state.curr_job.map((job, i) => {\n        const x = user._id;\n        var val;\n        var buttonval;\n\n        for (var i = 0; i < job.curr_applicants.length; i++) {\n          if (job.curr_applicants[i] === x) {\n            val = \"Applied\";\n            buttonval = \"Shortlist\";\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 200\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 201\n              },\n              __self: this\n            }, val), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              onClick: () => {\n                axios.get('http://localhost:4000/user/shortlist-job', {\n                  params: {\n                    _id: user._id\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                });\n                axios.get('http://localhost:4000/user/add-to-shortlist', {\n                  params: {\n                    _id: user._id\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                }); // console.log(id)\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }, buttonval)), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 226\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              onClick: () => {\n                axios.get('http://localhost:4000/user/reject-job', {\n                  params: {\n                    _id: user._id\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                });\n                axios.get('http://localhost:4000/user/add-to-rejected', {\n                  params: {\n                    _id: user._id\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                }); // console.log(id)\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 226\n              },\n              __self: this\n            }, \"Reject\")));\n          }\n        } //  arr = this.state.curr_job[0]\n\n\n        for (var i = 0; i < job.curr_shortlisted.length; i++) {\n          if (job.curr_shortlisted[i] === x) {\n            val = \"Shortlisted\";\n            buttonval = \"Accept\";\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 262\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 263\n              },\n              __self: this\n            }, val), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 264\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              onClick: () => {\n                var status = \"active\";\n\n                if (job.max_positions == job.curr_selected + 1) {\n                  status = \"inactive\";\n                } else var today = new Date(),\n                    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n                axios.get('http://localhost:4000/user/accept-job', {\n                  params: {\n                    recuiter: job._id_of_recuiter,\n                    _id: user._id,\n                    date: date,\n                    type: job.type\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                });\n                axios.get('http://localhost:4000/user/add-to-accepted', {\n                  params: {\n                    _id: user._id,\n                    status: status\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                });\n                axios.get('http://localhost:4000/user/reject-others', {\n                  params: {\n                    _id: user._id\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                });\n                axios.get('http://localhost:4000/user/reject-all', {\n                  params: {\n                    _id: user._id,\n                    jobs: user.jobs_applied\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                }); // console.log(id)\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 264\n              },\n              __self: this\n            }, buttonval)), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 323\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              onClick: () => {\n                axios.get('http://localhost:4000/user/reject-job', {\n                  params: {\n                    _id: user._id\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                });\n                axios.get('http://localhost:4000/user/add-to-rejected', {\n                  params: {\n                    _id: user._id\n                  }\n                }).then(response => console.log(response)).catch(function (err) {\n                  console.log(err);\n                }); // console.log(id)\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 323\n              },\n              __self: this\n            }, \"Reject\")));\n          }\n        }\n      }));\n    }))));\n  }\n\n}\n\nexport default jobdetails;","map":{"version":3,"sources":["/home/dinesh/sem4/ssad/assignments/ssada1/frontend/src/components/Users/job-details.js"],"names":["React","Component","axios","Navbarr","Button","unstable_createMuiStrictModeTheme","Icon","jobdetails","constructor","props","state","details","curr_job","stat","checstatus","bind","onSort","componentDidMount","get","then","response","setState","data","catch","error","console","log","event","sortKey","val","x","map","job","i","_id","sort","a","b","nameA","nameB","rating_cn","rating","name","application","length","id_of_job","date_of_application","title","jobs_applied","f","render","e","user","rat","sop","doj","skills","education","inst","joind","endd","buttonval","curr_applicants","params","err","curr_shortlisted","status","max_positions","curr_selected","today","Date","date","getFullYear","getMonth","getDate","recuiter","_id_of_recuiter","type","jobs"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Navbarr from '../templates/Navbar-r'\nimport { Button, unstable_createMuiStrictModeTheme } from '@material-ui/core';\nimport { Icon } from 'semantic-ui-react'\n\nclass jobdetails extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {details: [] , curr_job : [] ,stat : ''}\n        this.checstatus = this.checstatus.bind(this);\n        this.onSort = this.onSort.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user/profile/jobs') // unimplemented\n             .then(response => {\n                 this.setState({details: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        axios.get('http://localhost:4000/user/curr-job-details') // unimplemented\n             .then(response => {\n                 this.setState({curr_job: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        \n    }\n    onSort(event , sortKey ,val){\n        const details = this.state.details;\n        var x;\n        this.state.curr_job.map((job,i) => {\n            x =job._id\n        })\n        \n\n        details.sort((a,b) => {\n            var nameA , nameB;\n\n            if(sortKey === 'rating')\n            {\n                if(a.rating_cn != 0)\n                {\n                    nameA = a.rating/a.rating_cn;\n                }\n                else\n                    nameA = 0\n                \n                if(b.rating_cn != 0)\n                {\n                    nameB = b.rating/b.rating_cn;\n                }\n                else\n                    nameB = 0\n            }\n            else if(sortKey === 'name')\n            {\n                nameA = a.name;\n                nameB = b.name;\n            }\n            else\n            {\n                for(var i = 0;i< a.application.length ;i++)\n                {\n                    \n                    if(a.application[i].id_of_job === x)\n                    {\n                        nameA = a.application[i].date_of_application\n                    }\n                }\n                for(var i = 0;i< b.application.length ;i++)\n                {\n                    \n                    if(b.application[i].id_of_job === x)\n                    {\n                        nameB = b.application[i].date_of_application\n                    }\n                }\n               \n            }\n            if (nameA < nameB) {\n                if(val)return -1;\n                else  return 1;\n            }\n            if (nameA > nameB) {\n                if(val) return 1;\n                else return -1;\n            }\n            return 0;\n        })\n        this.setState({details : details})\n        // console.log(jobs)\n    }\n    checstatus(title)\n    {\n        var x = this.state.details[0].jobs_applied\n        var i\n        var f=0\n        for(i = 0 ;i<x.length ;i++){\n            if(x[i]==title)\n                f=1;\n        }\n        return f;\n    }\n\n    render() {\n        \n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" href=\"/created-jobs\" class=\"back\">Back</Button>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Applicant Name<Icon name='angle up' size='large' onClick = {e => this.onSort(e,'name',0)} /> <Icon name='angle down' size='large' onClick = {e => this.onSort(e,'name',1)} /></th>\n                            <th>Applicant Skills</th>\n                            <th>Date of Application<Icon name='angle up' size='large' onClick = {e => this.onSort(e,'date_of_application',0)} /> <Icon name='angle down' size='large' onClick = {e => this.onSort(e,'date_of_application',1)} /></th>\n                            <th>Education</th>\n                            <th>SOP</th>\n                            <th>Rating<Icon name='angle up' size='large' onClick = {e => this.onSort(e,'rating',0)} /> <Icon name='angle down' size='large' onClick = {e => this.onSort(e,'rating',1)} /></th>\n                            <div>\n                            <th>Stage</th>\n                            <th>Shortlist/Accept</th>\n                            <th>Reject</th>\n                            </div>\n                            {/* <th>Dispatch</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.details.map((user, i) => {\n                            var rat;\n                            if(user.rating_cn !=0)\n                            {\n                                rat = user.rating/user.rating_cn;\n                            }\n                            else\n                            {\n                                rat= \"Not Rated Yet\";\n                            }\n                            var sop;\n                            var x;\n                            var doj;\n                            this.state.curr_job.map((job,i) => {\n                                x =job._id\n                            })\n                            for(var i = 0;i< user.application.length ;i++)\n                            {\n                                if(user.application[i].id_of_job === x)\n                                {\n                                    sop = user.application[i].sop\n                                    doj = user.application[i].date_of_application;\n                                }\n                            }\n                            return (\n                                <tr>\n                                    <td>{user.name}</td>\n                                    <td>{\n                                        user.skills.map((val,i) => {\n                                return (\n                                <span>{val} <span>&nbsp;&nbsp;</span> </span>\n                                )\n                            })\n                        }</td>\n                                    <td>{doj}</td>\n                                    <td>{\n                            user.education.map((val,i) => {\n\n                                \n                                if(val.inst!==''){\n                                return (\n                                <span>{val.inst}({val.joind} - {val.endd}) <span>&nbsp;&nbsp;</span></span>\n                                )\n                                }\n                                else\n                                {\n                                    return (\n                                        <span></span>\n                                    )\n                                }\n                            })\n                        }</td>\n                        <td>{sop}</td>\n                        <td>{rat}</td>\n                        {\n                            this.state.curr_job.map((job,i) => {\n                            const x = user._id;\n                           var val;\n                           var buttonval;\n                           for(var i = 0;i<job.curr_applicants.length ;i++)\n                           {\n                               if(job.curr_applicants[i]===x)\n                               {\n                                   val = \"Applied\"\n                                   buttonval = \"Shortlist\"\n                                   return(\n                                    <div>\n                                    <td>{val}</td>\n                                    <td><button onClick = {() =>{\n                                        axios.get('http://localhost:4000/user/shortlist-job' , {\n                                            params : {\n                                                _id : user._id\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                        axios.get('http://localhost:4000/user/add-to-shortlist' , {\n                                            params : {\n                                                _id : user._id,\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n\n                                        // console.log(id)\n                                    }}>{buttonval}</button></td>\n                                    <td><button onClick = {() =>{\n                                        axios.get('http://localhost:4000/user/reject-job' , {\n                                            params : {\n                                                _id : user._id\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                        axios.get('http://localhost:4000/user/add-to-rejected' , {\n                                            params : {\n                                                _id : user._id,\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n\n                                        // console.log(id)\n                                    }}>Reject</button></td>\n                                    </div>\n                                   )\n                               }\n                           }\n                         //  arr = this.state.curr_job[0]\n                           for(var i = 0;i<job.curr_shortlisted.length ;i++)\n                           {\n                               if(job.curr_shortlisted[i]===x)\n                               {\n                                   val = \"Shortlisted\"\n                                   buttonval = \"Accept\"\n                                   return (\n                                    <div>\n                                    <td>{val}</td>\n                                    <td><button onClick = {() =>{\n                                        var status = \"active\";\n                                        if(job.max_positions == (job.curr_selected +1))\n                                        {\n                                            status = \"inactive\";\n                                        }\n                                        else\n                                        var today = new Date(),\n                                        date =  today.getFullYear()   + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n                                        axios.get('http://localhost:4000/user/accept-job' , {\n                                            params : {\n                                                recuiter : job._id_of_recuiter,\n                                                _id : user._id,\n                                                date : date ,\n                                                type : job.type\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                        axios.get('http://localhost:4000/user/add-to-accepted' , {\n                                            params : {\n                                                _id : user._id,\n                                                status : status\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n\n                                        axios.get('http://localhost:4000/user/reject-others' , {\n                                            params : {\n                                                _id : user._id,\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                        axios.get('http://localhost:4000/user/reject-all' , {\n                                            params : {\n                                                _id : user._id,\n                                                jobs : user.jobs_applied\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n\n                                        // console.log(id)\n                                    }}>{buttonval}</button></td>\n                                    <td><button onClick = {() =>{\n                                        axios.get('http://localhost:4000/user/reject-job' , {\n                                            params : {\n                                                _id : user._id\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                        axios.get('http://localhost:4000/user/add-to-rejected' , {\n                                            params : {\n                                                _id : user._id,\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n\n                                        // console.log(id)\n                                    }}>Reject</button></td>\n                                    </div>\n                                   )\n                               }\n                           }\n                            })\n                        }\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default jobdetails;"]},"metadata":{},"sourceType":"module"}