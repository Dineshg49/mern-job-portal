{"ast":null,"code":"var _jsxFileName = \"/home/dinesh/sem4/ssad/assignments/ssada1/frontend/src/components/Users/my-jobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Navbarr from '../templates/Navbar-r';\nimport { Button } from '@material-ui/core';\nimport { Icon } from 'semantic-ui-react';\n\nclass Myjobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      var nam = e.target.name;\n      var val = e.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      details: [],\n      jobs: [],\n      stat: '',\n      search: ''\n    };\n    this.checstatus = this.checstatus.bind(this);\n    this.onSort = this.onSort.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/user/profile') // unimplemented\n    .then(response => {\n      this.setState({\n        details: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/user/active-jobs') // unimplemented\n    .then(response => {\n      this.setState({\n        jobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  onSort(event, sortKey) {\n    const jobs = this.state.jobs;\n    jobs.sort((a, b) => {\n      const nameA = a.sortKey; // ignore upper and lowercase\n\n      const nameB = b.sortKey; // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n    this.setState({\n      jobs: jobs\n    });\n    console.log(jobs);\n  }\n\n  checstatus(_id) {\n    var x = this.state.details[0].jobs_applied;\n    var i;\n    var f = 0;\n\n    for (i = 0; i < x.length; i++) {\n      if (x[i] == _id) f = 1;\n    }\n\n    return f;\n  }\n\n  render() {\n    var jobs = this.state.jobs;\n    console.log(\"here\");\n    console.log(jobs);\n    const searchedtitle = jobs.filter(job => {\n      return job.title.toLowerCase().includes(this.state.search.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      href: \"/dashboard-a\",\n      class: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by Job-Title\",\n      className: \"form-control\",\n      name: \"search\",\n      value: this.state.search,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Job-Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Recuiter Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Rating \", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'rating'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \"  \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Salary \", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'salary'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \"  \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Duration \", React.createElement(Icon, {\n      name: \"angle up\",\n      size: \"large\",\n      onClick: e => this.onSort(e, 'duration'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"  \", React.createElement(Icon, {\n      name: \"angle down\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Deadline\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Apply\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, searchedtitle.map((job, i) => {\n      var f = this.checstatus(job._id); // var stat\n\n      if (f == 1) this.state.stat = \"Applied\";else {\n        console.log(job.max_applications);\n        console.log(job.curr_applicants.length);\n        if (job.max_applications == job.curr_applicants.length) this.state.stat = \"Full\";else this.state.stat = \"Apply\";\n      }\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, job.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, job.name_of_recuiter), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, job.rating), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, job.salary), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, job.duration), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, job.deadline), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => {\n          if (this.state.details[0].jobs_applied.length == 10) {\n            alert(\"You cannot have more than 10 open job applications\");\n          } else {\n            var sop = prompt('Please enter your name');\n            axios.get('http://localhost:4000/user/apply-job', {\n              params: {\n                _id: job._id,\n                title: job.title,\n                sop: sop\n              }\n            }).then(response => console.log(response)).catch(function (err) {\n              console.log(err);\n            });\n            axios.get('http://localhost:4000/user/add-applicant', {\n              params: {\n                _id: job._id,\n                email: this.state.details[0].email,\n                title: job.title\n              }\n            }).then(response => console.log(response)).catch(function (err) {\n              console.log(err);\n            });\n          } // console.log(id)\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.stat)));\n    }))));\n  }\n\n}\n\nexport default Myjobs;","map":{"version":3,"sources":["/home/dinesh/sem4/ssad/assignments/ssada1/frontend/src/components/Users/my-jobs.js"],"names":["React","Component","axios","Navbarr","Button","Icon","Myjobs","constructor","props","onChange","e","nam","target","name","val","value","setState","state","details","jobs","stat","search","checstatus","bind","onSort","componentDidMount","get","then","response","data","catch","error","console","log","event","sortKey","sort","a","b","nameA","nameB","_id","x","jobs_applied","i","f","length","render","searchedtitle","filter","job","title","toLowerCase","includes","map","max_applications","curr_applicants","name_of_recuiter","rating","salary","duration","deadline","alert","sop","prompt","params","err","email"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Navbarr from '../templates/Navbar-r'\nimport { Button } from '@material-ui/core';\nimport { Icon } from 'semantic-ui-react'\n\n\nclass Myjobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {details: [] , jobs : [] ,stat : '' , search : ''}\n        this.checstatus = this.checstatus.bind(this);\n        this.onSort = this.onSort.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user/profile') // unimplemented\n             .then(response => {\n                 this.setState({details: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n\n        axios.get('http://localhost:4000/user/active-jobs') // unimplemented\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        \n    }\n    onSort(event , sortKey){\n        const jobs = this.state.jobs;\n        jobs.sort((a,b) => {\n            const nameA = a.sortKey; // ignore upper and lowercase\n            const nameB = b.sortKey; // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n            return 0;\n        })\n        this.setState({jobs : jobs})\n        console.log(jobs)\n    }\n    checstatus(_id)\n    {\n        var x = this.state.details[0].jobs_applied\n        var i\n        var f=0\n        for(i = 0 ;i<x.length ;i++){\n            if(x[i]==_id)\n                f=1;\n        }\n        return f;\n    }\n    onChange = e => {\n        var nam = e.target.name;\n        var val = e.target.value;\n        this.setState({ [nam] : val });\n    }\n\n    render() {\n        var jobs = this.state.jobs;\n        console.log(\"here\");\n        console.log(jobs)\n        const searchedtitle = jobs.filter(job => {\n            return job.title.toLowerCase().includes(this.state.search.toLowerCase())\n        })\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" href=\"/dashboard-a\" class=\"back\">Back</Button>\n\n                <input type=\"text\" placeholder=\"Search by Job-Title\" className=\"form-control\" name = \"search\" value={this.state.search} onChange={this.onChange} />\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Job-Title</th>\n                            <th>Recuiter Name</th>\n                            <th>Rating <Icon name='angle up' size='large' onClick = {e => this.onSort(e,'rating')} />  <Icon name='angle down' size='large' /></th>\n                            <th>Salary <Icon name='angle up' size='large' onClick = {e => this.onSort(e,'salary')} />  <Icon name='angle down' size='large' /></th>\n                            <th>Duration <Icon name='angle up' size='large' onClick = {e => this.onSort(e,'duration')}/>  <Icon name='angle down' size='large' /></th>\n                            <th>Deadline</th>\n                            <th>Apply</th>\n\n                            {/* <th>Dispatch</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        searchedtitle.map((job, i) => {\n                            var f = this.checstatus(job._id)\n                           // var stat\n                            if(f==1)\n                                this.state.stat = \"Applied\"\n                            else\n                            {\n                                console.log(job.max_applications)\n                                console.log(job.curr_applicants.length)\n                                if(job.max_applications == job.curr_applicants.length)\n                                    this.state.stat = \"Full\"\n                                else\n                                    this.state.stat = \"Apply\"\n                            }\n                            return (\n                                <tr>\n                                    <td>{job.title}</td>\n                                    <td>{job.name_of_recuiter}</td>\n                                    <td>{job.rating}</td>\n                                    <td>{job.salary}</td>\n                                    <td>{job.duration}</td>\n                                    <td>{job.deadline}</td>\n                                    <th><button className=\"btn btn-primary\" onClick = {() =>{\n                                        if(this.state.details[0].jobs_applied.length == 10)\n                                        {\n                                            alert(\"You cannot have more than 10 open job applications\")\n                                        }\n                                        else{\n                                        var sop = prompt('Please enter your name')\n                                        axios.get('http://localhost:4000/user/apply-job' , {\n                                            params : {\n                                                _id : job._id,\n                                                title : job.title,\n                                                sop : sop\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                        axios.get('http://localhost:4000/user/add-applicant' , {\n                                            params : {\n                                                _id : job._id,\n                                                email : this.state.details[0].email,\n                                                title : job.title\n                                            }\n                                        }\n                                        )\n                                        .then(response => console.log(response))\n                                        .catch(function(err) {\n                                            console.log(err);\n                                        });\n                                    }\n                                        // console.log(id)\n                                    }}>{this.state.stat}</button></th>\n\n                                    {/* <td><input type=\"button\" value=\"Dispatch\" className=\"btn btn-primary\"/></td> */}\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Myjobs;"]},"metadata":{},"sourceType":"module"}